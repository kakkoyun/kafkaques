apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: demo
    app.kubernetes.io/instance: kafkaques
    app.kubernetes.io/name: kafkaques
  name: kafkaques-producer
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: demo
      app.kubernetes.io/instance: kafkaques
      app.kubernetes.io/name: kafkaques
  template:
    metadata:
      labels:
        app.kubernetes.io/component: demo
        app.kubernetes.io/instance: kafkaques
        app.kubernetes.io/name: kafkaques
    spec:
      containers:
        - args:
            - kafkaques
            - produce
            - --log-level=debug
            - --brokers=one-node-cluster-0.one-node-cluster.chat-with-me.svc:9092
            - parca_chat
          image: ghcr.io/kakkoyun/kafkaques:v0.2.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /live
              port: 8081
              scheme: HTTP
            periodSeconds: 30
          name: kafkaques
          ports:
            - containerPort: 8080
              name: internal
          readinessProbe:
            failureThreshold: 12
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            periodSeconds: 5
          resources: { }
          terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      terminationGracePeriodSeconds: 120
